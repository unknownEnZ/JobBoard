@inject HttpClient _client
<EditForm Model="@job" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

     <fieldset disabled="@Disabled">
    <div class="form-group">
        <label>Job title: </label>
        <div>
            <InputText @bind-Value="job.JobTitle" class="form-control" />
            <ValidationMessage For="@(() => job.JobTitle)" />
        </div>
    </div>

    <div class="form-group">
        <label>Description: </label>
        <div>
            <InputTextArea @bind-Value="job.Description" class="form-control" />
            <ValidationMessage For="@(() => job.Description)" />
        </div>
    </div>
     <div class="form-group">
            <label>Rate: </label>
            <div>
                <InputText @bind-Value="job.rate" class="form-control" />
                <ValidationMessage For="@(() => job.rate)" />
            </div>
      </div>
    <div class="form-group">
        <label>Salary: </label>
        <div>
            <InputNumber @bind-Value="job.Salary" class="form-control" />
            <ValidationMessage For="@(() => job.Salary)" />
        </div>
    </div>
   <div class="form-group">
        <label>Salary: </label>
        <div>
            <InputNumber @bind-Value="job.Salary" class="form-control" />
            <ValidationMessage For="@(() => job.Salary)" />
        </div>
    </div>     

    <div class="form-group">
        <label>Job Location: </label>
        <div>
            <InputText @bind-Value="job.Location" class="form-control" />
            <ValidationMessage For="@(() => job.Location)" />
        </div>
    </div>
    <div class="form-group">
        <label>Job Type: </label>
        <div>
            <InputText @bind-Value="job.JobType" class="form-control" />
            <ValidationMessage For="@(() => job.JobType)" />
        </div>
    </div>

    <div class="form-group">
        <label>Employer: </label>
        <div>
            <InputSelect @bind-Value="job.EmployerId" class="form-control">
                <option value="">-- Select Employer --</option>
                @if (Employers != null)
                {
                    foreach (var employer in Employers)
                    {
                        <option value="@employer.Id">@employer.FirstName  @employer.LastName</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => job.EmployerId)" />
        </div>
    </div>

    </fieldset>
    @if (!Disabled)
    {


        <button type="submit" class="btn btn-success btn-block"> @ButtonText </button>
    }
    <BackToList Target="jobs" />
</EditForm>
@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Job? job { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }


    private IList<Employer>? Employers;




    protected async override Task OnInitializedAsync() // whenever the page loads all the data will be loaded
    {
        Employers = await _client.GetFromJsonAsync<List<Employer>>($"{Endpoints.EmployersEndpoint}");



    }
}